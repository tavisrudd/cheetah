#extend WebwareSiteTemplate

###################
#redefine locationBar

#end redefine locationBar
###################


########################
#redefine mainContentsCell

<H1 CLASS="mainText">What is Webware?</H1>

<P CLASS="mainText">
Webware is an internet development platform powered by
#Python(), the
Open Source programming language developed by Guido van Rossum.</P>

<H1 CLASS="mainText">What does Webware provide?</H1>
<UL>
  <LI>The strength of <A HREF="http://jakarta.apache.org">server-side Java</A>,
  without its complexity.</LI>
  
  <LI>The power of server-side <A HREF="http://perl.apache.org/">Perl</A>,
  without its syntax.</LI>
  
  <LI>The Python of #Zope(), without its headaches.</LI>
  <LI>The flexibility of <A HREF="http://hoohoo.ncsa.uiuc.edu/cgi/intro.html">CGI</A>,
  without its overhead.</LI>
  
  <LI>The simplicity of #PHP(), without its limitations.</LI>
  <LI>The capabilities of #ASP() and #ColdFusion(), without their
	  price tag.</LI>
</UL>
<P CLASS="mainText">
...The power of the web, with the ease of #Python()!
</P>


<H1 CLASS="mainText">Cut the marketing-speak! I want details.</H1>

<P CLASS="mainText">
ok ... Webware provides:
<UL>
  <LI CLASS=".listItems">a fast, reliable, extensible, and scalable application server.</LI>
  
  <LI CLASS=".listItems">coding in #Python(): a powerful object-orientated language.
  Python dramatically improves developer productivity and code readible over Java, C++, and
  other compiled languages.  Furthermore, it's easier
  to learn than other interpreted languages.</LI>

  <LI CLASS=".listItems">support for several development approaches:
  using pure Python Servlets as
  in Java Servlets; using embedded PSP script as in ASP, PHP, JSP, and embed-Perl;
  using templating languages as in Velocity and WebMacro;
  and any combination of the above.</LI>
  
  <LI CLASS=".listItems">full access to all Python modules. 
  Webware doesn't require you jump through hoops to import relevant Python modules.</LI>

  <LI CLASS=".listItems">an extensive suite of add-ons and tools.</LI>

  <LI CLASS=".listItems">automatic management of sessions, cookies, HTTP headers, etc.</LI>

  <LI CLASS=".listItems">extensive support for XML, SOAP, XML-RPC,
  COM, and CORBA through Python.</LI>

  <LI CLASS=".listItems">structured exception handling through Python.
  This makes Webware much suitable for large complex projects than environments
  without structured exception handling, like PHP.</LI>

  <LI CLASS=".listItems">full object persistance and caching.
  This feature of the appserver a major advantage over solutions
  that are embedded in the webserver process, such as PHP where
  it costs over $2000US to purchase an add-on that only caches the
  byte-compiled code.</LI>

  <LI CLASS=".listItems">database connection persistance and pooling.</LI>

  <LI CLASS=".listItems">portability.
  It works anywhere Python works: Linux, Unixes, Windows, OS2, etc.</LI>
  
  <LI CLASS=".listItems">web server portability.
  It works with Apache, IIS, and most others.</LI>
  
  <LI CLASS=".listItems">web server independence.
  The application server runs in a separate process and can
  even run on separate machines. One webserver can communicate with multiple application
  servers, and vice-versa. It work crash your web-server and your webserver
  wont crash it. Load-balancing is easy.</LI>

  <LI CLASS=".listItems">protocol independence.
  Although the application server was developed with HTTP in mind, it can be
  extended to work with any TCP/IP based network protocol,
  even <A HREF="http://www.blug.linux.no/rfc1149/">CPIP</A> ;-).</LI>
  
  <LI CLASS=".listItems">a powerful template framework that separates the page logic
  from its design/display and supports a reusable component-based design.</LI>
  
  <LI CLASS=".listItems">interopability with other programming languages,
  such as C, C++ and Java, through Python's extension framework.</LI>
                
  <LI CLASS=".listItems">full source code.
  All code is licensed under the 'Open Source' Python license, which
  allows for unrestricted use, modification, and redistribution.  Unlike the
  GNU GPL, it allows the code to be used in commercial products.
  </LI>
  
  <LI CLASS=".listItems">and most importantly, an active and supportive developer community!</LI>
  
</UL>            
</P>


<H1 CLASS="mainText">What's with the onion?!</H1> 
<P CLASS="mainText"> Onions are
ubiquitous.  They grow almost anywhere and can be used in almost any dish.  You'll
find them from bachelor pads to haut cuisine restaurants, because they work well with
others and are hard to botch, yet offer a surprising array of taste in the right
hands.</P>

<P CLASS="mainText">Onions are layered.  Thus, they can be transformed into an
endless range of shapes.  You can cook with an entire onion, or even several, but you
can also just slice off a few rings.  </P>

<P CLASS="mainText">Onions are easy to understand.  You don't need expensive training
to cook with them.</P>

<P CLASS="mainText"> So it should be with internet development platforms.  They
should be hardy and work well with others; be easy to use for simple and complex
tasks alike; should allow you to use a little or alot, depending on your tastes, and
they shouldn't require a computer science degree to be understood.  But, unlike
onions, they shouldn't they make you cry ;-)</P>


#end redefine mainContentsCell
########################
