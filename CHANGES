Please initial your changes (there's a key at bottom) and add a date for each release
================================================================================
1.0.0a1 (?, 2002)
   - fixed bug in srcfile-mtime monitoring / update code (TR)
   - fixed the parsing of single-line #defs and #blocks so they can have
     arguments (TR)
   - added test cases for single-line #defs and #blocks with args (TR)
   - fixed a silly typo bug in Parser.py where a comma was left at the end of
     regex definition, make it a tuple rather than a regex

0.9.9 (Dec 14, 2001)
   - implemented one-line #def's and #block's (TR)
        #def aTest: This is a $adj test   ---- READ THE MANUAL FOR MORE INFO.
     NOTE: leading and trailing whitespace is stripped.  These should only be used on
     lines by themselves as it reads to the end of the line.
   - made cheetah-compile accept input on standard input (TR)
   - made sure that #def and #block work with $'s on the method names (TR)

0.9.9b1 (Dec 6, 2001)
   - template constructor arg 'outputFilter' now 'filter', for consistency
     with #filter (MO)
   - template constructor raises TypeError if bad arguments (MO)
   - Cheetah.Utils.VerifyType new module containing functions for verifying the
     type of an argument (MO)
   - Cheetah.Utils: new package for non-Cheetah-specific modules needed by
     Cheetah (MO)
   - Cheetah.Filters: new filter WebSafe, several bugfixes (MO)
   - more work on the Users' Guide (MO)
   - fixed bug with adding Python's __builtins__ to the local vars list (TR)
   - fixed bug with #echo (TR)
   - fixed bug that was preventing ${a, $b=1234} from working like ${a, b=1234} (TR)
   - fixed some bugs in Template.varExists and Template.getVar() 
     (TR - thanks to MH for spotting them)
   - made it possible to use filenames like 'spam-eggs.txt' that have invalid
     characters for module names with Template(): Template(file='spam-eggs.txt')
     (TR/MH)
   - refactored 'cheetah-compile' a little (TR)
   - Cheetah.Filters.Strip: new filter to strip leading/trailing whitespace
     but preserve newlines.  Suitable for #filter directive or (possible)
     future #sed directive. (MO)
   - Cheetah.Filters.StripSqueeze: new filter to canonicalize all whitespace
     chunks to ' '.  Also removes all newlines (joining multi-line input into
     one long line), and leading/trailing whitespace from the final result. (MO)
   - Filters can now be used standalone for debugging or for use outside
     Cheetah.  This works transparently; details are in Filters.py docstring.
     (MO)
   - Cheetah.Tools.MondoReport: new module for dividing a long list into
     "pages", and for calculating statistics useful in reports. (MO)
   - refactored Cheetah.Servlet.Servlet.Awake a little (TR)
   - fixed an output bug in the #block generated code that turned up when you
     tried to override a block method from Python rather than Cheetah. (TR)
   - started preparing to shift some of the 'shared' utility classes, such as
     SettingsManager, to the Webware core.  Cheetah 1.0 will probably require
     Webware to be installed so it can access those shared classes. (TR)
   - extended the template module command line interface(TR/MO)

0.9.9a6 (Nov 6, 2001) 
   - fixed bug with quotations in longer constant string chunks (TR)
   - fixed another bug in the cheetah-compile script (TR)
   - fixed a bug in the file-update monitoring code that was resulting in
     infinite loops when used with Template sub-classes (TR)
   - extended the #filter framework according to Mike's suggestions (TR)  
   - added test modules for cheetah-compile and the file-update monitoring code (TR)
   - extended the capabilities of cheetah-compile ... (IB)
   - updated the docs (MO)

0.9.9a5 (October 31, 2001) 
   - fixed a bug I created yesterday (TR)

0.9.9a4 (October 30, 2001) 
   - added #repeat (TR implementing Chuck's suggestion)
   - added #unless (TR implementing Mike's suggestion)
   - updates to the Users' Guide (MO)
   - fixed a small bug in the cheetah-compile script, as reported by Ian on the
     list (TR)

0.9.9a3 (October 12, 2001) 
   - more in the Users Guide (TR)
   - renamed #attribute as #attr  (TR)
   - renamed #call as #silent (TR)
   - added #echo directive (TR)
 
0.9.9a2 (October 11, 2001) 
   - updated the example site and the SkeletonPage framework (TR)
   - fixed some small bugs (TR)
   - corrected some typos in the docs (TR + MO)
   - added Ian's sitehiearchy class to Cheetah.Tools (TR + IB)

0.9.9a1 (October 9, 2001)  [many changes and bug-fixes]
   - a complete reimplementation of Cheetah's core (the parser and compiler
     classes) (TR + IB)

   - implemented the #def, #implements, #import, and #from directives
     + removed #redefine and #macros
     + renamed #extend as #extends (TR + IB)

   - replaced #data with #settings, see the docs (TR)

   - restructured and updated the docs (TR + MO + IB)

   - reimplemented the cheetah-compile script, without the -g option that Ian
     had added (TR)

   - changed the signature of Template.__init__.  See the docs. (TR)

   - made #set distinguish between local and global vars.  See the docs. (TR)

   - added a hundreds of new test cases (TR)

   - added the #breakpoint and #compiler-settings directives (TR)

   - started restructuring the SkeletonPage framework [not complete yet] (TR)
   - started restructuring the example sites [not complete yet] (TR)


0.9.8 (October 9, 2001)
   - added a few new language constructs (aka 'directives') to Cheetah (TR)
     #while ... #end while
     #try ... #except ... #else ... #finally ... #end try

   - fixed a bug in the handling of local vars in #for loops that was preventing
     callable local vars from being handled properly. See Chuck's post of Sept
     10. (TR)

   - fixed a pointer bug in the C version of NameMapper.valueFromSearchList()
     that was yielding undefined values for the NotFound exception when it was
     raised (TR)

   - prefaced all internal args to Template() with underscores (TR)
   - fixed the problem with parsing triple quoted strings in arg lists (TR)
   - updated the docs (TR)

0.9.8a4 (September 7, 2001)

  - Added -g (appendGen function argument), which compiles x.tmpl to xGen.py,
    with x.py being for non-generated Python code. Also changed option handling
    a little and added a comment to the top of compiled files. (IB + MO)

  - finalized the #include syntax after a lengthy discussion on the list 
    This is different from in 0.9.8a3 (TR)
        #include <ARGS> <EXPR> 
        ... uses the value of EXPR as the path of the file to include.
        
        #include <ARGS> source = <EXPR> 
        ... includes the value of the EXPR 

        where <ARGS> is 'raw' or ''

  - re-implemented the output mechanism to use streaming via Webware's
    Transaction and Response objects when available and fake it with the
    DummyTransaction DummyResponse classes when the Webware Transaction is not
    avialable. This behaviour is roughly the same as in Webware's PSP.  Will
    implement output buffering PHP-style later if there is any demand. (TR)

  - made #include a run-time directive rather than compile-time.  This is
    slower, but the semantics are better. (TR)

  - various small optimizations to the generated code (TR)

  - updated the docs (TR)


0.9.8a3 (August 22, 2001) [includes changes for 0.9.8a1 and 0.9.8a2]

  - Added package ./src/Tools/ for contributed classes/functions/packages not
    necessary to run Cheetah.  The first such class is RecursiveNull.py by Ian
    Bicking.  Added package Cheetah.Tools to list in ./setup.py . (MO)
  - Template.__init__ keyword arg 'searchList': no longer has to be a tuple.  It
    may be a list or any type that that Python's 'tuple' function accepts. (MO)
  - Template.__init__ new keyword arg 'file': this may be a filename or file
    object to read the Template Definition from.  If you use this, you must not
    pass a Template Definition string also.  New instance variables 
    ._fileName and ._fileMtime are set if a filename was passed; otherwise they
    are None. (MO)
  - CodeGenerator new function 'varNotFound_KeyError': raises KeyError if a
    placeholder name is missing when filling the template.  Disabled by default.
    (MO)  NB - this change has been superceeded by 'errorCheckers'
  - Template.getUnknowns (new method): returns a list of Placeholder Names
    missing in the Search List. (MO) - this change has been superceeded by 
    'errorCheckers'
  - made changes to Template.py, CodeGenerator.py, PlaceholderProcessor.py,
    and TagProcessor.py to enable customization of the placeholderStartToken so 
    it can be set to any character sequence, rather than just the default '$'.
    This is configurable by the Template setting 'placeholderStartToken' (TR)
  - fixed a small bug in PlaceholderProcessor.processTag() that prevented
    static caching (i.e. $*) of a value containing ''' style quotes
  - added #break and #continue (TR)
  - fixed the relative path problem with #include when using Cheetah with WebKit
    (TR)
  - implemented the #stop directive (TR)
  - fixed a bug in the macro processing that prevented macros defined inside
    #includes from being visible at the top level (TR)
  - fixed a bug in the handling of the setting 'useAutocalling' (TR)
  - fixed some bugs in the handling of macros (TR)
  - completed the transition to nested template #includes (TR)
  - added direct #includes (TR)
  - completed the transition to run-time evaluation (TR)
  - renamed the .startServer() method of Template to .compile() (TR)
  - renamed the 'delayedStart' setting as 'delayedCompile' (TR)
  - added .redefineTemplateBlock as an alias to Template.defineTemplateBlock
    (TR)
  - got relative path includes working with Webware and Cheetah.Servlet (TR)
  - lots of changes in the docs (TR & MO)
  - implemented a C version of NameMapper (TR + CE)
  - added the 'errorCheckers' framwork (TR)
  - added the 'formatters' framework and the #formatter directive
  - a major restructuring of the modules and internal API (TR)
  - made sure that all the #directives with start and end tags are
    implemented in such a way that they won't cause 'maximum recursion' limit
    errors if their content block is long.  Simple regexes didn't cut it in these 
    cases. (TR)
    - #macro
    - multiline comments
    - #data
    - #block
    - #raw
    - the parsing of the core tags (the state-dependent ones) after they have been
      translated to the internal delimiters
  - made a Template.shutdown() method for cleaning up reference cycles before a 
    template object is deleted. (TR)
  - made the parsing and processing of #macros() more robust (TR)
  - implemented the file update checking mechanism (TR)
    NOTE, the syntax for the #include is now:
        #include <ARGS> file = <EXPR> 
        ... uses the value of EXPR as the path of the file to include.

        #include <ARGS> <EXPR> 
        ... includes the value of the EXPR 

        where <ARGS> is 'raw' or 'direct'

 
0.9.7 (July 13, 2001)

  - reimplemented the parsing of $placeholders using the Python tokenize module (TR)
    - now translates into Python code instead of going through NameMapper for
      each request
    - supports arg lists and nested placeholders
    - maintained support for autocalling of functions and methods,
      will do this serially for $func.otherFunc, etc.
  - reimplemented the #include and #raw directives using nested templates for
    parsed includes and  string attributes of 'Template' to store raw text
    The support for file update monitoring of includes is still not implemented (TR)
  - moved some stuff from __init__.py into CHANGES and TODO  (TR)
  - added a new command 'sdist_docs' to setup.py which rebuilds the docs
    when making a source distribution (TR)
  - changed the name of the ./Cheetah dir to ./src (TR)
  - fixed a bug in one of the code filters that was preventing commas from 
    being used between $placeholders (TR)
  - generalized the line ending regex for single-line comments (TR)
  - corrected the spelling of 'Delimiters' throughout Cheetah (TR)
  - made insertLines in Utilities.py more robust (Chuck)
  - added key argument to raising some NotFound exceptions in NameMapper (Chuck)
  - fixed strange bug involving missing templateObj parameter 
    in PlaceholderProcessor.py(Chuck)
  - expanded on the docs (Mike)

0.9.6 (June 12, 2001)
  - fixed a bug in NameMapper that was preventing 'obj.__class__.__name__' from mapping (TR)

0.9.5 (June 10, 2001)
  - implemented the #cache directive - see the mailing list (TR)
  - reworked the handling of cached $placeholders and set $var to mean NO_CACHE,
    $*var to mean STATIC_CACHE, and $*15*var to mean TIMED_REFRESH_CACHE (TR)
  - renamed Template._getValueForName as Template.mapName (TR)

0.9.4 (June 9, 2001)
  - created a SettingsManager base class to handle settings for the Template class (TR)
  - moved the HTML docs icons into the same dir as the HTML (TR)

0.9.3
  - updated the User's Guide Makefile. Builds HTML, PDF, and PS in the ./docs dir now. (TR)
  - changed the refs to 'Tavis Rudd' in the docs to 'The Cheetah Development Team' (TR)
  - added a few bits to the docs (TR)
  - did some internal renaming so 'nameMapperTags' are referred as 'placeholderTags' (TR)
  - added the #slurp directive (TR)
  
0.9.2
  - got the PSP plugin working again.  It still need test cases. (TR)

0.9.1
  - Changed the name of the package to 'Cheetah' from TemplateServer (TR)
  - Changed the name of the Server module and its TemplateServer class to 'Template' (TR)
  - Changed the name of the 'TScompile' script to 'cheetah-compile' (TR)
  - updated the docs (TR)

0.9.0
  - changed the names and behaviour of the #parse and #include directives (TR)
    see the docs for more. (TR)
  - changed #verbatim to #raw (TR)
  - fixed a bug in Tests.py that caused an error on the first run. (TR)
  - more docs (TR + MO)
  ! all tests pass with Python 2.1 and 2.0 (TR)
  
0.8.4
  - changed the #directive end tags to #end if instead of #/if and #end (TR)
    macro instead of #/macro (TR)
  - more work on the User's Guide (TR)
  - fixed a bug in TScompile (TR)
  
0.8.3
  - fixed a problem with the regexs that caused $vars and #directives at the (TR)
    very beginning of the template string not to match in Python 2.0 (TR)
  - removed some Test cases that made invalid assumptions about the order (TR)
    of items in dictionaries. (TR)

0.8.2
  - finished half of the User's Guide (TR)
  - fixed several small bugs (TR)
  - added the #comment directive and removed the old <# multiline comment tag #> (TR)
  - changed the explicit directive closure to /# from ;# (TR)

  
0.7.6
  - several small bug fixes (TR)
  - reimplemented the #block directive to avoid maximum recursion depth errors (TR)
    with large blocks. (TR)
  - created many new test cases in the regression testing suite (TR)
  - added an example site to the examples/ directory (TR)
  - started the User's Guide (TR)

0.7.5
  - implemented the command-line compiler (TR)

0.7.3-4
  - implemented the regression testing suite (TR)
  - fixed a number of small bugs (TR)

0.7.2
  - implemented the #longMacro directive (TR)


================================================================================
KEY TO INITIALS USED ABOVE:
TR - Tavis Rudd
CE - Chuck Esterbrook
MO - Mike Orr
IB - Ian Bicking
MH - Mike Halle

  
